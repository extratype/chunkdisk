v0.1

* Initial release.

v0.2

* Make sure to update the last modified time.

v0.3

* Flush all only if whole chunk is explicitly requested to be flushed, let Windows decide otherwise.
* Update the last modified time in fine resolution.

v0.4

* Use unbuffered I/O instead of memory mappings.
* Chunk size must be a multiple of 4096. This breaks backward compatibility.
* Add an option -t to adjust number of I/O threads.
* Performance tunings.

v0.5

* Use buffered I/O to improve performance. But the drive stutters when Windows flushes written buffer to the backing chunk.

v0.6

* Create .lock file to prevent re-mounting.
* Add `chunkdisk-t` class in `install.reg` to set the number of I/O threads by `launchctl-x64.exe start chunkdisk-t InstanceName File.chunkdisk Number`.

v0.9

* Fix chunks created and written when unmapped partially.
* Use unbuffered, asynchronous I/O.
* Make I/O scheduling deterministic for better sequential performance on HDDs.
* Merge unmap ranges across requests for better space efficiency.
* Flush file metadata after one minute of inactivity.

v1.0

* Change maximum transfer length to 1MB to maximize sequential performance.
* Revert deterministic I/O scheduling to handle concurrent I/O's as intended.
* Improve handling buffers for small-sized I/O's.
* Fix bugs in unaligned (page-based) I/O's.
* Fix inactivity timer.

v1.2

* New feature: differential disk.
* The `.lock` file is not removed automatically on exit if `-W 0` option is given. Manually remove it to mount again with `-W 1` option.
* Close file handles to trigger updating metadata when the virtual disk is not only idle but under low load for a minute.
* Handle the case where the file system does not support FSCTL_SET_ZERO_DATA IOCTL.

v1.3

* Add option (`-Z 0`) to disable zero-fill partially unmapped chunk.

v1.4

* Fix tracking recently unmapped pages.
* Fix an I/O error when writing to a new differential chunk, which may cause loss of data.
* Fix locking chunks.

v1.5

* Add option (`-U GUID`) to set the serial number of the virtual disk.
* Print errors in detail while starting.
* Remember only a limited number of chunk locations for memory usage.
* Add option (`-M 1`) to support for moving chunks. Chunks must be locked properly to be moved.
* Fix out of memory by Unmap() with large ranges.
